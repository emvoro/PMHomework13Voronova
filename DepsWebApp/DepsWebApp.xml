<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DepsWebApp</name>
    </assembly>
    <members>
        <member name="T:DepsWebApp.Clients.IRatesProviderClient">
            <summary>
            Abstract currency rates provider interface.
            </summary>
        </member>
        <member name="M:DepsWebApp.Clients.IRatesProviderClient.GetRatesAsync">
            <summary>
            Requests rates from  currency rates provider.
            </summary>
            <returns>Returns currency rates.</returns>
        </member>
        <member name="T:DepsWebApp.Clients.NbuClient">
            <summary>
            NBU currency rates provider.
            For more details, please visit
            https://bank.gov.ua/ua/open-data/api-dev
            </summary>
        </member>
        <member name="M:DepsWebApp.Clients.NbuClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Options.IOptions{DepsWebApp.Options.NbuClientOptions})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:DepsWebApp.Clients.NbuClient.GetRatesAsync">
            <inheritdoc/>
        </member>
        <member name="T:DepsWebApp.Contracts.AccountDTO">
            <summary>
            Transportation model for registration of new users
            </summary>
        </member>
        <member name="P:DepsWebApp.Contracts.AccountDTO.Login">
            <summary>
            Received login
            </summary>
        </member>
        <member name="P:DepsWebApp.Contracts.AccountDTO.Password">
            <summary>
            Received password
            </summary>
        </member>
        <member name="T:DepsWebApp.Contracts.NbuRate">
            <summary>
            NBU provider native data model for currency rate.
            </summary>
        </member>
        <member name="P:DepsWebApp.Contracts.NbuRate.Rate">
            <summary>
            Currency rate related to base currency (UAH).
            </summary>
        </member>
        <member name="P:DepsWebApp.Contracts.NbuRate.Currency">
            <summary>
            Currency code.
            </summary>
        </member>
        <member name="T:DepsWebApp.Controllers.AuthController">
            <summary>
            This controller is used for account operations(authorization, authentication...)
            </summary>
        </member>
        <member name="M:DepsWebApp.Controllers.AuthController.Register(DepsWebApp.Contracts.AccountDTO)">
            <summary>
            Method that registers an incoming account on the platform
            </summary>
            <param name="account">Account model that will be registered in api</param>
        </member>
        <member name="T:DepsWebApp.Controllers.RatesController">
            <summary>
            This controller is used for currency exchange
            </summary>
        </member>
        <member name="M:DepsWebApp.Controllers.RatesController.Get(System.String,System.String,System.Nullable{System.Decimal})">
            <summary>
            A method that changes the amount of money from one currency to another
            </summary>
            <param name="srcCurrency">Source currency</param>
            <param name="dstCurrency">Destination currency</param>
            <param name="amount">Amount to be exchanged</param>
            <returns>Monetary equivalent converted into another currency</returns>
        </member>
        <member name="T:DepsWebApp.Filters.CustomExceptionFilter">
            <summary>
            Exception Filter attribute
            </summary>
        </member>
        <member name="M:DepsWebApp.Filters.CustomExceptionFilter.OnExceptionAsync(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            Exception handling method.
            </summary>
            <param name="context">Exception Context.</param>
        </member>
        <member name="M:DepsWebApp.Filters.CustomExceptionFilter.GetExceptionCode(System.Exception)">
            <summary>
            Method that gets custom exception code.
            </summary>
            <param name="ex">Exception.</param>
        </member>
        <member name="T:DepsWebApp.Middlewares.LoggerMiddleware">
            <summary>
            Middleware for logging raw data information as formed request and response.
            </summary>
        </member>
        <member name="M:DepsWebApp.Middlewares.LoggerMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger{DepsWebApp.Middlewares.LoggerMiddleware})">
            <summary>
            Logger middleware construct.
            </summary>
            <param name="next">Request delegate.</param>
            <param name="logger">Logger.</param>
        </member>
        <member name="M:DepsWebApp.Middlewares.LoggerMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Method to invoke the middleware to log request and response data.
            </summary>
            <param name="context">Context.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:DepsWebApp.Middlewares.LoggerMiddleware.ObtainRequestBody(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Method to obtain the request body with stream reader.
            </summary>
            <param name="request">HttpRequest.</param>
            <returns>Request body string.</returns>
        </member>
        <member name="M:DepsWebApp.Middlewares.LoggerMiddleware.ObtainResponseBody(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Method to obtain the response body with stream reader.
            </summary>
            <param name="context">HttpContext.</param>
            <returns>Response body string.</returns>
        </member>
        <member name="M:DepsWebApp.Middlewares.LoggerMiddleware.GetEncodingFromContentType(System.String)">
            <summary>
            Method that gets encoding from content type.
            </summary>
            <param name="content">Content type string.</param>
            <returns>Encoding.</returns>
        </member>
        <member name="T:DepsWebApp.Models.Account">
            <summary>
            Account model
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.Account.Id">
            <summary>
            Account identifier.
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.Account.Login">
            <summary>
            Account login.
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.Account.Password">
            <summary>
            Account password.
            </summary>
        </member>
        <member name="M:DepsWebApp.Models.Account.#ctor(System.String,System.String,System.String)">
            <summary>
            Account constructor.
            </summary>
            <param name="id">Set <see cref="P:DepsWebApp.Models.Account.Id"/>Account Base64 identifier.</param>
            <param name="login">Set <see cref="P:DepsWebApp.Models.Account.Login"/>Account login.</param>
            <param name="password">Set <see cref="P:DepsWebApp.Models.Account.Password"/>Account password.</param>
        </member>
        <member name="T:DepsWebApp.Models.CurrencyRate">
            <summary>
            Currency rate model.
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.CurrencyRate.Currency">
            <summary>
            Currency code (ISO).
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.CurrencyRate.Rate">
            <summary>
            Currency rate related to base currency.
            </summary>
        </member>
        <member name="T:DepsWebApp.Models.Error">
            <summary>
            Custom error.
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.Error.Code">
            <summary>
            Error code.
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.Error.Message">
            <summary>
            Error message.
            </summary>
        </member>
        <member name="T:DepsWebApp.Models.ExchangeResult">
            <summary>
            Exchange operation result.
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.ExchangeResult.Rate">
            <summary>
            Exchange rate.
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.ExchangeResult.SourceAmount">
            <summary>
            Amount in source currency.
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.ExchangeResult.DestinationAmount">
            <summary>
            Amount in destination currency.
            </summary>
        </member>
        <member name="M:DepsWebApp.Models.ExchangeResult.#ctor(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Constructor.
            </summary>
            <param name="rate">Set <see cref="P:DepsWebApp.Models.ExchangeResult.Rate"/> value.</param>
            <param name="srcAmount">Set <see cref="P:DepsWebApp.Models.ExchangeResult.SourceAmount"/> value.</param>
            <param name="destAmount">Set <see cref="P:DepsWebApp.Models.ExchangeResult.DestinationAmount"/> value.</param>
        </member>
        <member name="T:DepsWebApp.Options.CacheOptions">
            <summary>
            Caching options.
            </summary>
        </member>
        <member name="P:DepsWebApp.Options.CacheOptions.RatesCacheLifeTime">
            <summary>
            Default rates cache lifetime.
            </summary>
        </member>
        <member name="T:DepsWebApp.Services.IRatesService">
            <summary>
            Currency rates service.
            </summary>
        </member>
        <member name="M:DepsWebApp.Services.IRatesService.ExchangeAsync(System.String,System.String,System.Decimal)">
            <summary>
            Exchanges given amount from source currency to destination currency.
            </summary>
            <param name="srcCurrency">Source currency</param>
            <param name="destCurrency">Destination currency</param>
            <param name="amount">Amount of funds.</param>
            <returns>Returns exchange result or <c>null</c> if source or destination currency wasn't found.</returns>
        </member>
        <member name="M:DepsWebApp.Services.IRatesService.ActualizeRatesAsync">
            <summary>
            Actualize rates.
            Kind of abstraction leak.
            </summary>
            <returns>Returns awaiter</returns>
        </member>
    </members>
</doc>
